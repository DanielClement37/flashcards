generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   email String  @unique
//   id    Int     @id @default(autoincrement())
//   name  String?
//   posts Post[]
// }

model Post {
  authorId  Int?
  content   String?
  id        Int     @id @default(autoincrement())
  published Boolean @default(false)
  title     String
  author    User?   @relation(fields: [authorId], references: [id])
}

// model accounts {
//   id                   Int       @id @default(autoincrement())
//   compound_id          String    @unique @db.VarChar(255)
//   user_id              Int
//   provider_type        String    @db.VarChar(255)
//   provider_id          String    @db.VarChar(255)
//   provider_account_id  String    @db.VarChar(255)
//   refresh_token        String?
//   access_token         String?
//   access_token_expires DateTime? @db.Timestamptz(6)
//   created_at           DateTime  @default(now()) @db.Timestamptz(6)
//   updated_at           DateTime  @default(now()) @db.Timestamptz(6)

//   @@index([provider_account_id], name: "provider_account_id")
//   @@index([provider_id], name: "provider_id")
//   @@index([user_id], name: "user_id")
// }

// model sessions {
//   id            Int      @id @default(autoincrement())
//   user_id       Int
//   expires       DateTime @db.Timestamptz(6)
//   session_token String   @unique @db.VarChar(255)
//   access_token  String   @unique @db.VarChar(255)
//   created_at    DateTime @default(now()) @db.Timestamptz(6)
//   updated_at    DateTime @default(now()) @db.Timestamptz(6)
// }

// model users {
//   id             Int       @id @default(autoincrement())
//   name           String?   @db.VarChar(255)
//   email          String?   @unique @db.VarChar(255)
//   email_verified DateTime? @db.Timestamptz(6)
//   image          String?
//   created_at     DateTime  @default(now()) @db.Timestamptz(6)
//   updated_at     DateTime  @default(now()) @db.Timestamptz(6)
// }

// model verification_requests {
//   id         Int      @id @default(autoincrement())
//   identifier String   @db.VarChar(255)
//   token      String   @unique @db.VarChar(255)
//   expires    DateTime @db.Timestamptz(6)
//   created_at DateTime @default(now()) @db.Timestamptz(6)
//   updated_at DateTime @default(now()) @db.Timestamptz(6)
// }

model Account {
  id                 Int       @default(autoincrement()) @id
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
}

model Session {
  id           Int      @default(autoincrement()) @id
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            Int       @default(autoincrement()) @id
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")
  posts Post[]

  @@map(name: "users")
}

model VerificationRequest {
  id         Int      @default(autoincrement()) @id
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime  @default(now()) @map(name: "created_at")
  updatedAt  DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}