import Head from 'next/head';
import { Footer } from 'components/common';
import { useQuery, useQueryClient } from 'react-query';
import { request, gql } from 'graphql-request';
import {
  useCreateDraftMutationMutation,
  useDeletePostMutation,
  useFeedQuery,
} from 'lib/generated';
import client from 'lib/gql-request-client';
import Link from 'next/link';

const endpoint = 'http://localhost:3000/api/graphql';

const HomePage = () => {
  // const { data } = useQuery('feed', async () => {
  //   const { feed } = await request(
  //     endpoint,
  //     gql`
  //       query {
  //         feed {
  //           id
  //           title
  //           content
  //           published
  //           author {
  //             id
  //             name
  //             email
  //           }
  //         }
  //       }
  //     `
  //   );
  //   return feed;
  // });

  const { data, status, error } = useFeedQuery(client);

  const queryClient = useQueryClient();

  const { mutate } = useDeletePostMutation(client, {
    onSuccess: () => queryClient.invalidateQueries('Feed'),
  });

  const { mutate: create } = useCreateDraftMutationMutation(client, {
    onSuccess: () => queryClient.invalidateQueries('Feed'),
  });

  console.log(data);

  return (
    <div className='flex flex-col items-center justify-center min-h-screen py-2'>
      <Head>
        <title>Flashcards</title>
      </Head>

      <main className='flex flex-col items-center justify-center flex-1 px-20 text-center'>
        <h1 className='text-6xl font-bold'>Test</h1>

        <Link href='/'>
          <a>Home</a>
        </Link>

        <div>
          {status === 'loading' ? (
            <p>Loading...</p>
          ) : status === 'error' ? (
            <p>Error: {error.message}</p>
          ) : (
            <>
              <div>
                {data.feed.map(post => {
                  return (
                    <p key={post.id}>
                      {post.title} <span>{post.id}</span>{' '}
                      <span>
                        <button
                          onClick={() =>
                            data.feed && mutate({ postId: `${post.id}` })
                          }
                        >
                          Delete
                        </button>
                      </span>
                    </p>
                  );
                })}
              </div>
              <div className='pt-2'>
                <button
                  onClick={() =>
                    data.feed &&
                    create({
                      authorEmail: 'bob@bob.com',
                      title: 'New Post',
                      content: 'This post was generated by the button',
                    })
                  }
                >
                  Create Post
                </button>
              </div>
            </>
          )}
        </div>
      </main>

      <Footer />
    </div>
  );
};

export default HomePage;
